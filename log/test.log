Missing env vars: STRIPE_SECRET_KEY
STRIPE_SECRET_KEY is not set; Stripe API calls will fail
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
Missing env vars: STRIPE_SECRET_KEY
STRIPE_SECRET_KEY is not set; Stripe API calls will fail
  [1m[36mActiveRecord::SchemaMigration Load (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "environment"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "environment"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "environment"]]
  [1m[35mSQL (0.0ms)[0m  [1m[35mSET search_path TO public[0m
  [1m[35m (47.5ms)[0m  [1m[35mDROP DATABASE IF EXISTS "mediatrack_test"[0m
  [1m[35m (28.7ms)[0m  [1m[35mCREATE DATABASE "mediatrack_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (8.8ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql" SCHEMA pg_catalog[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "media_items" CASCADE[0m
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "media_items" ("id" bigserial primary key, "created_at" timestamp(6) NOT NULL, "media_type" character varying, "overview" text, "poster_path" character varying, "release_date" date, "title" character varying, "tmdb_id" integer, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_media_items_on_tmdb_id" ON "media_items" ("tmdb_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  [1m[35m (1.8ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "created_at" timestamp(6) NOT NULL, "email" character varying DEFAULT '' NOT NULL, "encrypted_password" character varying DEFAULT '' NOT NULL, "remember_created_at" timestamp(6), "reset_password_sent_at" timestamp(6), "reset_password_token" character varying, "stripe_customer_id" character varying, "subscription_status" character varying, "tmdb_api_key" character varying, "updated_at" timestamp(6) NOT NULL, "username" character varying NOT NULL)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_users_on_email" ON "users" ("email")[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_users_on_reset_password_token" ON "users" ("reset_password_token")[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_users_on_username" ON "users" ("username")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "watchlist_items" CASCADE[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "watchlist_items" ("id" bigserial primary key, "created_at" timestamp(6) NOT NULL, "media_item_id" bigint NOT NULL, "status" character varying DEFAULT 'planned' NOT NULL, "updated_at" timestamp(6) NOT NULL, "user_id" bigint NOT NULL, "watched_on" date)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE INDEX "index_watchlist_items_on_media_item_id" ON "watchlist_items" ("media_item_id")[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_watchlist_items_on_user_id_and_media_item_id" ON "watchlist_items" ("user_id", "media_item_id")[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE INDEX "index_watchlist_items_on_user_id" ON "watchlist_items" ("user_id")[0m
  [1m[35m (1.3ms)[0m  [1m[35mALTER TABLE "watchlist_items" ADD CONSTRAINT "fk_rails_dbd68e62e5"
FOREIGN KEY ("media_item_id")
  REFERENCES "media_items" ("id")
[0m
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "watchlist_items" ADD CONSTRAINT "fk_rails_077cf8f283"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20251022231127)[0m
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20251022211833),
(20251022114725),
(20251022114716),
(20251022114658),
(20251022114638);[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "environment"]]
  [1m[36mActiveRecord::InternalMetadata Create (0.8ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ('environment', 'test', '2025-10-22 23:14:35.593662', '2025-10-22 23:14:35.593664') RETURNING "key"[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "environment"]]
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::InternalMetadata Create (0.7ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ('schema_sha1', '7444b2440f1df7f3c347e74253fe78ee6d040da7', '2025-10-22 23:14:35.595662', '2025-10-22 23:14:35.595663') RETURNING "key"[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------
UserTest: test_username_uniqueness_is_case_insensitive
------------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.7ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (1.3ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
  [1m[36mUser Create (0.4ms)[0m  [1m[32mINSERT INTO "users" ("created_at", "email", "encrypted_password", "remember_created_at", "reset_password_sent_at", "reset_password_token", "stripe_customer_id", "subscription_status", "tmdb_api_key", "updated_at", "username") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["created_at", "2025-10-22 23:14:35.749298"], ["email", "[FILTERED]"], ["encrypted_password", "[FILTERED]"], ["remember_created_at", nil], ["reset_password_sent_at", "[FILTERED]"], ["reset_password_token", "[FILTERED]"], ["stripe_customer_id", nil], ["subscription_status", nil], ["tmdb_api_key", "[FILTERED]"], ["updated_at", "2025-10-22 23:14:35.749298"], ["username", "testuser"]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------
UserTest: test_tmdb_api_key_invalid_adds_validation_error
---------------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mUser Exists? (0.2ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.2ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mBEGIN[0m
---------------------------------------
UserTest: test_username_must_be_present
---------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."username" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mBEGIN[0m
--------------------------------------
UserTest: test_username_must_be_unique
--------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.3ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "existinguser"], ["LIMIT", 1]]
  [1m[36mUser Create (0.2ms)[0m  [1m[32mINSERT INTO "users" ("created_at", "email", "encrypted_password", "remember_created_at", "reset_password_sent_at", "reset_password_token", "stripe_customer_id", "subscription_status", "tmdb_api_key", "updated_at", "username") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["created_at", "2025-10-22 23:14:35.768032"], ["email", "[FILTERED]"], ["encrypted_password", "[FILTERED]"], ["remember_created_at", nil], ["reset_password_sent_at", "[FILTERED]"], ["reset_password_token", "[FILTERED]"], ["stripe_customer_id", nil], ["subscription_status", nil], ["tmdb_api_key", "[FILTERED]"], ["updated_at", "2025-10-22 23:14:35.768032"], ["username", "existinguser"]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "existinguser"], ["LIMIT", 1]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------
UserTest: test_subscribed?_false_when_status_nil_or_other
---------------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_subscribed?_true_when_status_active
--------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mROLLBACK[0m
Missing env vars: STRIPE_SECRET_KEY
STRIPE_SECRET_KEY is not set; Stripe API calls will fail
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------------------------------------------------
Users::RegistrationsControllerTest: test_destroy_without_password_does_not_delete_account
-----------------------------------------------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.6ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (1.4ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
  [1m[36mUser Create (0.2ms)[0m  [1m[32mINSERT INTO "users" ("created_at", "email", "encrypted_password", "remember_created_at", "reset_password_sent_at", "reset_password_token", "stripe_customer_id", "subscription_status", "tmdb_api_key", "updated_at", "username") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["created_at", "2025-10-22 23:24:33.492054"], ["email", "[FILTERED]"], ["encrypted_password", "[FILTERED]"], ["remember_created_at", nil], ["reset_password_sent_at", "[FILTERED]"], ["reset_password_token", "[FILTERED]"], ["stripe_customer_id", nil], ["subscription_status", nil], ["tmdb_api_key", "[FILTERED]"], ["updated_at", "2025-10-22 23:24:33.492054"], ["username", "testuser"]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------------------------------------------
Users::RegistrationsControllerTest: test_destroy_with_incorrect_password_does_not_delete_account
------------------------------------------------------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.6ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.2ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
  [1m[36mUser Create (0.3ms)[0m  [1m[32mINSERT INTO "users" ("created_at", "email", "encrypted_password", "remember_created_at", "reset_password_sent_at", "reset_password_token", "stripe_customer_id", "subscription_status", "tmdb_api_key", "updated_at", "username") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["created_at", "2025-10-22 23:24:33.500299"], ["email", "[FILTERED]"], ["encrypted_password", "[FILTERED]"], ["remember_created_at", nil], ["reset_password_sent_at", "[FILTERED]"], ["reset_password_token", "[FILTERED]"], ["stripe_customer_id", nil], ["subscription_status", nil], ["tmdb_api_key", "[FILTERED]"], ["updated_at", "2025-10-22 23:24:33.500299"], ["username", "testuser"]]
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------------------------------------
Users::RegistrationsControllerTest: test_destroy_with_correct_password_deletes_account
--------------------------------------------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.4ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
  [1m[36mUser Create (0.2ms)[0m  [1m[32mINSERT INTO "users" ("created_at", "email", "encrypted_password", "remember_created_at", "reset_password_sent_at", "reset_password_token", "stripe_customer_id", "subscription_status", "tmdb_api_key", "updated_at", "username") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["created_at", "2025-10-22 23:24:33.509505"], ["email", "[FILTERED]"], ["encrypted_password", "[FILTERED]"], ["remember_created_at", nil], ["reset_password_sent_at", "[FILTERED]"], ["reset_password_token", "[FILTERED]"], ["stripe_customer_id", nil], ["subscription_status", nil], ["tmdb_api_key", "[FILTERED]"], ["updated_at", "2025-10-22 23:24:33.509505"], ["username", "testuser"]]
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
Missing env vars: STRIPE_SECRET_KEY
STRIPE_SECRET_KEY is not set; Stripe API calls will fail
  [1m[36mActiveRecord::InternalMetadata Load (0.8ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------------------------------------------------
Users::RegistrationsControllerTest: test_destroy_without_password_does_not_delete_account
-----------------------------------------------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.8ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (1.2ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
  [1m[36mUser Create (0.3ms)[0m  [1m[32mINSERT INTO "users" ("created_at", "email", "encrypted_password", "remember_created_at", "reset_password_sent_at", "reset_password_token", "stripe_customer_id", "subscription_status", "tmdb_api_key", "updated_at", "username") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["created_at", "2025-10-22 23:24:51.122802"], ["email", "[FILTERED]"], ["encrypted_password", "[FILTERED]"], ["remember_created_at", nil], ["reset_password_sent_at", "[FILTERED]"], ["reset_password_token", "[FILTERED]"], ["stripe_customer_id", nil], ["subscription_status", nil], ["tmdb_api_key", "[FILTERED]"], ["updated_at", "2025-10-22 23:24:51.122802"], ["username", "testuser"]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------------------------------------
Users::RegistrationsControllerTest: test_destroy_with_correct_password_deletes_account
--------------------------------------------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.3ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.2ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
  [1m[36mUser Create (0.2ms)[0m  [1m[32mINSERT INTO "users" ("created_at", "email", "encrypted_password", "remember_created_at", "reset_password_sent_at", "reset_password_token", "stripe_customer_id", "subscription_status", "tmdb_api_key", "updated_at", "username") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["created_at", "2025-10-22 23:24:51.131667"], ["email", "[FILTERED]"], ["encrypted_password", "[FILTERED]"], ["remember_created_at", nil], ["reset_password_sent_at", "[FILTERED]"], ["reset_password_token", "[FILTERED]"], ["stripe_customer_id", nil], ["subscription_status", nil], ["tmdb_api_key", "[FILTERED]"], ["updated_at", "2025-10-22 23:24:51.131667"], ["username", "testuser"]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------------------------------------------
Users::RegistrationsControllerTest: test_destroy_with_incorrect_password_does_not_delete_account
------------------------------------------------------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.3ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.2ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
  [1m[36mUser Create (0.1ms)[0m  [1m[32mINSERT INTO "users" ("created_at", "email", "encrypted_password", "remember_created_at", "reset_password_sent_at", "reset_password_token", "stripe_customer_id", "subscription_status", "tmdb_api_key", "updated_at", "username") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["created_at", "2025-10-22 23:24:51.136476"], ["email", "[FILTERED]"], ["encrypted_password", "[FILTERED]"], ["remember_created_at", nil], ["reset_password_sent_at", "[FILTERED]"], ["reset_password_token", "[FILTERED]"], ["stripe_customer_id", nil], ["subscription_status", nil], ["tmdb_api_key", "[FILTERED]"], ["updated_at", "2025-10-22 23:24:51.136476"], ["username", "testuser"]]
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mROLLBACK[0m
Missing env vars: STRIPE_SECRET_KEY
STRIPE_SECRET_KEY is not set; Stripe API calls will fail
  [1m[36mActiveRecord::InternalMetadata Load (0.7ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------------------------------------------
Users::RegistrationsControllerTest: test_destroy_with_incorrect_password_does_not_delete_account
------------------------------------------------------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.6ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (1.2ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
  [1m[36mUser Create (0.3ms)[0m  [1m[32mINSERT INTO "users" ("created_at", "email", "encrypted_password", "remember_created_at", "reset_password_sent_at", "reset_password_token", "stripe_customer_id", "subscription_status", "tmdb_api_key", "updated_at", "username") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["created_at", "2025-10-22 23:25:43.009697"], ["email", "[FILTERED]"], ["encrypted_password", "[FILTERED]"], ["remember_created_at", nil], ["reset_password_sent_at", "[FILTERED]"], ["reset_password_token", "[FILTERED]"], ["stripe_customer_id", nil], ["subscription_status", nil], ["tmdb_api_key", "[FILTERED]"], ["updated_at", "2025-10-22 23:25:43.009697"], ["username", "testuser"]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------------------------------------------------
Users::RegistrationsControllerTest: test_destroy_without_password_does_not_delete_account
-----------------------------------------------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.3ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
  [1m[36mUser Create (0.2ms)[0m  [1m[32mINSERT INTO "users" ("created_at", "email", "encrypted_password", "remember_created_at", "reset_password_sent_at", "reset_password_token", "stripe_customer_id", "subscription_status", "tmdb_api_key", "updated_at", "username") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["created_at", "2025-10-22 23:25:43.017577"], ["email", "[FILTERED]"], ["encrypted_password", "[FILTERED]"], ["remember_created_at", nil], ["reset_password_sent_at", "[FILTERED]"], ["reset_password_token", "[FILTERED]"], ["stripe_customer_id", nil], ["subscription_status", nil], ["tmdb_api_key", "[FILTERED]"], ["updated_at", "2025-10-22 23:25:43.017577"], ["username", "testuser"]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------------------------------------
Users::RegistrationsControllerTest: test_destroy_with_correct_password_deletes_account
--------------------------------------------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.3ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
  [1m[36mUser Create (0.2ms)[0m  [1m[32mINSERT INTO "users" ("created_at", "email", "encrypted_password", "remember_created_at", "reset_password_sent_at", "reset_password_token", "stripe_customer_id", "subscription_status", "tmdb_api_key", "updated_at", "username") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["created_at", "2025-10-22 23:25:43.022139"], ["email", "[FILTERED]"], ["encrypted_password", "[FILTERED]"], ["remember_created_at", nil], ["reset_password_sent_at", "[FILTERED]"], ["reset_password_token", "[FILTERED]"], ["stripe_customer_id", nil], ["subscription_status", nil], ["tmdb_api_key", "[FILTERED]"], ["updated_at", "2025-10-22 23:25:43.022139"], ["username", "testuser"]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
Missing env vars: STRIPE_SECRET_KEY
STRIPE_SECRET_KEY is not set; Stripe API calls will fail
  [1m[36mActiveRecord::InternalMetadata Load (0.6ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------------------------------------------
Users::RegistrationsControllerTest: test_destroy_with_incorrect_password_does_not_delete_account
------------------------------------------------------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.6ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (1.3ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
  [1m[36mUser Create (0.2ms)[0m  [1m[32mINSERT INTO "users" ("created_at", "email", "encrypted_password", "remember_created_at", "reset_password_sent_at", "reset_password_token", "stripe_customer_id", "subscription_status", "tmdb_api_key", "updated_at", "username") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["created_at", "2025-10-22 23:26:04.198921"], ["email", "[FILTERED]"], ["encrypted_password", "[FILTERED]"], ["remember_created_at", nil], ["reset_password_sent_at", "[FILTERED]"], ["reset_password_token", "[FILTERED]"], ["stripe_customer_id", nil], ["subscription_status", nil], ["tmdb_api_key", "[FILTERED]"], ["updated_at", "2025-10-22 23:26:04.198921"], ["username", "testuser"]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started POST "/users/sign_in" for 127.0.0.1 at 2025-10-22 19:26:04 -0400
Processing by Devise::SessionsController#create as HTML
  Parameters: {"user" => {"username" => "testuser", "password" => "[FILTERED]"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1 ORDER BY "users"."id" ASC LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
Redirected to http://www.example.com/movies
Completed 303 See Other in 16ms (ActiveRecord: 0.7ms (1 query, 0 cached) | GC: 1.2ms)
  [1m[36mUser Count (0.5ms)[0m  [1m[34mSELECT COUNT(*) FROM "users"[0m
Started DELETE "/users" for 127.0.0.1 at 2025-10-22 19:26:04 -0400
Processing by Users::RegistrationsController#destroy as HTML
  Parameters: {"current_password" => "[FILTERED]"}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" = $1 ORDER BY "users"."id" ASC LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
Redirected to http://www.example.com/users/edit
Completed 302 Found in 7ms (ActiveRecord: 0.3ms (1 query, 0 cached) | GC: 2.7ms)
  [1m[36mCACHE User Count (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM "users"[0m
  [1m[36mTRANSACTION (0.9ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------------------------------------------------
Users::RegistrationsControllerTest: test_destroy_without_password_does_not_delete_account
-----------------------------------------------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.4ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
  [1m[36mUser Create (0.3ms)[0m  [1m[32mINSERT INTO "users" ("created_at", "email", "encrypted_password", "remember_created_at", "reset_password_sent_at", "reset_password_token", "stripe_customer_id", "subscription_status", "tmdb_api_key", "updated_at", "username") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["created_at", "2025-10-22 23:26:04.296443"], ["email", "[FILTERED]"], ["encrypted_password", "[FILTERED]"], ["remember_created_at", nil], ["reset_password_sent_at", "[FILTERED]"], ["reset_password_token", "[FILTERED]"], ["stripe_customer_id", nil], ["subscription_status", nil], ["tmdb_api_key", "[FILTERED]"], ["updated_at", "2025-10-22 23:26:04.296443"], ["username", "testuser"]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started POST "/users/sign_in" for 127.0.0.1 at 2025-10-22 19:26:04 -0400
Processing by Devise::SessionsController#create as HTML
  Parameters: {"user" => {"username" => "testuser", "password" => "[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1 ORDER BY "users"."id" ASC LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
Redirected to http://www.example.com/movies
Completed 303 See Other in 6ms (ActiveRecord: 0.2ms (1 query, 0 cached) | GC: 2.4ms)
  [1m[36mUser Count (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "users"[0m
Started DELETE "/users" for 127.0.0.1 at 2025-10-22 19:26:04 -0400
Processing by Users::RegistrationsController#destroy as HTML
  Parameters: {"current_password" => "[FILTERED]"}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" = $1 ORDER BY "users"."id" ASC LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
Redirected to http://www.example.com/users/edit
Completed 302 Found in 10ms (ActiveRecord: 0.4ms (1 query, 0 cached) | GC: 5.0ms)
  [1m[36mCACHE User Count (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM "users"[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------------------------------------
Users::RegistrationsControllerTest: test_destroy_with_correct_password_deletes_account
--------------------------------------------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.4ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
  [1m[36mUser Create (0.2ms)[0m  [1m[32mINSERT INTO "users" ("created_at", "email", "encrypted_password", "remember_created_at", "reset_password_sent_at", "reset_password_token", "stripe_customer_id", "subscription_status", "tmdb_api_key", "updated_at", "username") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["created_at", "2025-10-22 23:26:04.331037"], ["email", "[FILTERED]"], ["encrypted_password", "[FILTERED]"], ["remember_created_at", nil], ["reset_password_sent_at", "[FILTERED]"], ["reset_password_token", "[FILTERED]"], ["stripe_customer_id", nil], ["subscription_status", nil], ["tmdb_api_key", "[FILTERED]"], ["updated_at", "2025-10-22 23:26:04.331037"], ["username", "testuser"]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started POST "/users/sign_in" for 127.0.0.1 at 2025-10-22 19:26:04 -0400
Processing by Devise::SessionsController#create as HTML
  Parameters: {"user" => {"username" => "testuser", "password" => "[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1 ORDER BY "users"."id" ASC LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
Redirected to http://www.example.com/movies
Completed 303 See Other in 4ms (ActiveRecord: 0.2ms (1 query, 0 cached) | GC: 1.2ms)
  [1m[36mUser Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "users"[0m
Started DELETE "/users" for 127.0.0.1 at 2025-10-22 19:26:04 -0400
Processing by Users::RegistrationsController#destroy as HTML
  Parameters: {"current_password" => "[FILTERED]"}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" = $1 ORDER BY "users"."id" ASC LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mWatchlistItem Load (0.3ms)[0m  [1m[34mSELECT "watchlist_items".* FROM "watchlist_items" WHERE "watchlist_items"."user_id" = $1[0m  [["user_id", 14]]
  [1m[36mUser Destroy (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 14]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/
Completed 302 Found in 20ms (ActiveRecord: 2.2ms (3 queries, 0 cached) | GC: 8.5ms)
  [1m[36mUser Count (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "users"[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
Missing env vars: STRIPE_SECRET_KEY
STRIPE_SECRET_KEY is not set; Stripe API calls will fail
  [1m[36mActiveRecord::InternalMetadata Load (0.6ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------
UserTest: test_user_can_be_created_with_email
---------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mUser Exists? (0.5ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (1.2ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "newuser2"], ["LIMIT", 1]]
  [1m[36mCACHE User Exists? (0.0ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mCACHE User Exists? (0.0ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "newuser2"], ["LIMIT", 1]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Create (0.4ms)[0m  [1m[32mINSERT INTO "users" ("created_at", "email", "encrypted_password", "remember_created_at", "reset_password_sent_at", "reset_password_token", "stripe_customer_id", "subscription_status", "tmdb_api_key", "updated_at", "username") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["created_at", "2025-10-22 23:28:51.849554"], ["email", "[FILTERED]"], ["encrypted_password", "[FILTERED]"], ["remember_created_at", nil], ["reset_password_sent_at", "[FILTERED]"], ["reset_password_token", "[FILTERED]"], ["stripe_customer_id", nil], ["subscription_status", nil], ["tmdb_api_key", "[FILTERED]"], ["updated_at", "2025-10-22 23:28:51.849554"], ["username", "newuser2"]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_subscribed?_true_when_status_active
--------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------
UserTest: test_tmdb_api_key_invalid_adds_validation_error
---------------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mUser Exists? (0.2ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mBEGIN[0m
---------------------------------------
UserTest: test_username_must_be_present
---------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mUser Exists? (0.2ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."username" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mBEGIN[0m
--------------------------------------
UserTest: test_username_must_be_unique
--------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.3ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "existinguser"], ["LIMIT", 1]]
  [1m[36mUser Create (0.2ms)[0m  [1m[32mINSERT INTO "users" ("created_at", "email", "encrypted_password", "remember_created_at", "reset_password_sent_at", "reset_password_token", "stripe_customer_id", "subscription_status", "tmdb_api_key", "updated_at", "username") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["created_at", "2025-10-22 23:28:51.866479"], ["email", "[FILTERED]"], ["encrypted_password", "[FILTERED]"], ["remember_created_at", nil], ["reset_password_sent_at", "[FILTERED]"], ["reset_password_token", "[FILTERED]"], ["stripe_customer_id", nil], ["subscription_status", nil], ["tmdb_api_key", "[FILTERED]"], ["updated_at", "2025-10-22 23:28:51.866479"], ["username", "existinguser"]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.2ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "existinguser"], ["LIMIT", 1]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------
UserTest: test_subscribed?_false_when_status_nil_or_other
---------------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------
UserTest: test_user_can_be_created_without_email
------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mUser Exists? (0.2ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "newuser"], ["LIMIT", 1]]
  [1m[36mCACHE User Exists? (0.0ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "newuser"], ["LIMIT", 1]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Create (0.3ms)[0m  [1m[32mINSERT INTO "users" ("created_at", "email", "encrypted_password", "remember_created_at", "reset_password_sent_at", "reset_password_token", "stripe_customer_id", "subscription_status", "tmdb_api_key", "updated_at", "username") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["created_at", "2025-10-22 23:28:51.875222"], ["email", "[FILTERED]"], ["encrypted_password", "[FILTERED]"], ["remember_created_at", nil], ["reset_password_sent_at", "[FILTERED]"], ["reset_password_token", "[FILTERED]"], ["stripe_customer_id", nil], ["subscription_status", nil], ["tmdb_api_key", "[FILTERED]"], ["updated_at", "2025-10-22 23:28:51.875222"], ["username", "newuser"]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------
UserTest: test_username_uniqueness_is_case_insensitive
------------------------------------------------------
[dotenv] Saved a snapshot of [32mENV[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.3ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
  [1m[36mUser Create (0.2ms)[0m  [1m[32mINSERT INTO "users" ("created_at", "email", "encrypted_password", "remember_created_at", "reset_password_sent_at", "reset_password_token", "stripe_customer_id", "subscription_status", "tmdb_api_key", "updated_at", "username") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["created_at", "2025-10-22 23:28:51.879437"], ["email", "[FILTERED]"], ["encrypted_password", "[FILTERED]"], ["remember_created_at", nil], ["reset_password_sent_at", "[FILTERED]"], ["reset_password_token", "[FILTERED]"], ["stripe_customer_id", nil], ["subscription_status", nil], ["tmdb_api_key", "[FILTERED]"], ["updated_at", "2025-10-22 23:28:51.879437"], ["username", "testuser"]]
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "[FILTERED]"], ["LIMIT", 1]]
  [1m[36mUser Exists? (0.1ms)[0m  [1m[34mSELECT 1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "testuser"], ["LIMIT", 1]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mROLLBACK[0m
